
package caseapp;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


 class Device{       //device  class start here
	
	String DeviceName;
	boolean isOn;
	
	 public Device(String name) {          //parameterise constructor for device class
	        this.DeviceName = name;
	        this.isOn = false;
	    }


       public void turnOn() {
       isOn = true;
       System.out.println(" is turned ON." +DeviceName);
}

       public void turnOff() {
       isOn = false;
       System.out.println(" is turned OFF." +DeviceName);
}

       public String getStatus() {
       return DeviceName + " is " + (isOn ? "ON" : "OFF");
}

       public String getName() {
       return DeviceName;
}
}
	

 class Room {
	    String name;
	    ArrayList<Device> d1 = new ArrayList<>();

	    Room(String name) {
	        this.name = name;
	    }

	    void addDevice(Device device) {
	        d1.add(device);
	        System.out.println(device.DeviceName + " added to " + name);
	    }

	    void showDeviceStatus() {
	        System.out.println("\nDevices in " + name + ":");
	        for (Device d : d1) {
	            System.out.println("- " + d.getStatus());
	        }
	    }

	    void controlDevice(String deviceName, boolean turnOn) {
	        for (Device d : d1) {
	            if (d.DeviceName.equalsIgnoreCase(deviceName)) {
	                if (turnOn) {
	                    d.turnOn();
	                } else {
	                    d.turnOff();
	                }
	                return; 
	            }
	        }
	        System.out.println("Device not found.");
	    }
	}

 public class SmartHome {
	    static Scanner input = new Scanner(System.in);
	    static ArrayList<Room> rooms = new ArrayList<>();

	    public static void main(String[] args) {
	        while (true) {
	        	
	            System.out.println("\n--- Smart Home Menu ---");
	            System.out.println("1. Add Room");
	            System.out.println("2. Control Device");
	            System.out.println("3. Show Device Status");
	            System.out.println("4. Exit");
	            System.out.print("Choose: ");
	            
	            int choice = input.nextInt();
	            input.nextLine(); // consume newline

	            if (choice == 1) {
	            	addRoom();
	            }
	            else if (choice == 2) {
	            	controlDevice();
	            }
	            else if (choice == 3) {
	            	showStatus();
	            }
	            else if (choice == 4) {
	            	break;
	            }
	            else System.out.println("Invalid choice.");
	        }
	    }

	    static void addRoom() {
	        System.out.print("Enter room name: ");
	        String roomName = input.nextLine();
	        Room room = new Room(roomName);
	        rooms.add(room);
	        System.out.println("Room added: " + roomName);

	        // Ask to add devices immediately
	        while (true) {
	            System.out.println("Add device to " + roomName + ":");
	            System.out.println("1. Light");
	            System.out.println("2. Fan");
	            System.out.println("3. AC");
	            System.out.println("4. TV");
	            System.out.println("5. Oven");
	            System.out.println("6. Shower");
	            System.out.println("0. Stop adding devices");
	            System.out.print("Enter your choice: ");
	            
	            int choice = input.nextInt();
	            input.nextLine(); // to clear the newline

	            if (choice == 0) {
	                break;
	            }
	            
	            String deviceName = "";

	            if (choice == 1) {
	            	deviceName = "Light";
	            }
	            else if (choice == 2) {
	            	deviceName = "Fan";
	            }
	            else if (choice == 3) {
	            	deviceName = "AC";
	            }
	            else if (choice == 4) {
	            	deviceName = "TV";
	            }
	            else if (choice == 5) {
	            	deviceName = "Oven";
	            }
	            else if (choice == 6) {
	            	deviceName = "Shower";
	            }
	            else {
	                System.out.println("Invalid choice. Try again.");
	                continue;
	            }
	            System.out.println(deviceName + " added to " + roomName);
	         
	        }
	    }

	    static void controlDevice() {
	        Room room = selectRoom();
	        if (room == null) return;

	        System.out.print("Enter device name to control: ");
	        String deviceName = input.nextLine();

	        System.out.print("Turn ON or OFF? (on/off): ");
	        String action = input.nextLine();

	      
	        room.controlDevice(deviceName, action.equalsIgnoreCase("on"));
	    }

	    static void showStatus() {
	        Room room = selectRoom();
	        if (room != null) room.showDeviceStatus();
	    }

	    static Room selectRoom() {
	        if (rooms.isEmpty()) {
	            System.out.println("No rooms available.");
	            return null;
	        }

	        System.out.println("Available rooms:");
	        for (int i = 0; i < rooms.size(); i++) {
	            System.out.println((i + 1) + ". " + rooms.get(i).name);
	        }
	        System.out.print("Select room number: ");
	        int index = input.nextInt();
	        input.nextLine();

	        if (index < 1 || index > rooms.size()) {
	            System.out.println("Invalid room.");
	            return null;
	        }

	        return rooms.get(index - 1);
	    }
	}
